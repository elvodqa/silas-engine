#![allow(dead_code)]

use sokol::gfx as sg;

/*
    #version:1# (machine generated, don't edit!)
  
    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)
  
    Cmdline: sokol-shdc -i src\shaders\obj.glsl -o src\shaders\obj.rs -l glsl330:metal_macos:hlsl4 -f sokol_rust
  
    Overview:
  
        Shader program 'obj':
            Get shader desc: obj_shader_desc(sg::query_backend());
            Vertex shader: vs
                Attribute slots:
                    ATTR_VS_APOS = 0
                    ATTR_VS_ANORMAL = 1
                Uniform block 'ObjVsParams':
                    C struct: ObjVsParams_t
                    Bind slot: SLOT_OBJVSPARAMS = 0
            Fragment shader: fs
                Uniform block 'ObjFsParams':
                    C struct: ObjFsParams_t
                    Bind slot: SLOT_OBJFSPARAMS = 0
  
*/
use crate::system::math::math as m;
pub const ATTR_VS_APOS: usize = 0;
pub const ATTR_VS_ANORMAL: usize = 1;
pub const SLOT_OBJVSPARAMS: usize = 0;
#[repr(C)]
pub struct Objvsparams {
    pub model: m::Mat4,
    pub view: m::Mat4,
    pub projection: m::Mat4,
}
pub const SLOT_OBJFSPARAMS: usize = 0;
#[repr(C)]
pub struct Objfsparams {
    pub lightPos: m::Vec3,
    pub _pad_12: [u8; 4],
    pub viewPos: m::Vec3,
    pub _pad_28: [u8; 4],
    pub lightColor: m::Vec3,
    pub _pad_44: [u8; 4],
    pub objectColor: m::Vec3,
    pub _pad_60: [u8; 4],
}
/*
   #version 330
   
   uniform vec4 ObjVsParams[12];
   out vec3 FragPos;
   layout(location = 0) in vec3 aPos;
   out vec3 Normal;
   layout(location = 1) in vec3 aNormal;
   
   void main()
   {
       mat4 _19 = mat4(ObjVsParams[0], ObjVsParams[1], ObjVsParams[2], ObjVsParams[3]);
       FragPos = vec3((_19 * vec4(aPos, 1.0)).xyz);
       mat4 _37 = transpose(inverse(_19));
       Normal = mat3(_37[0].xyz, _37[1].xyz, _37[2].xyz) * aNormal;
       gl_Position = (mat4(ObjVsParams[8], ObjVsParams[9], ObjVsParams[10], ObjVsParams[11]) * mat4(ObjVsParams[4], ObjVsParams[5], ObjVsParams[6], ObjVsParams[7])) * vec4(FragPos, 1.0);
   }
   
*/
pub const VS_SOURCE_GLSL330: [u8; 594] = [
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x4f,0x62,0x6a,0x56,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x4f,0x62,0x6a,0x56,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x28,
    0x5f,0x31,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,0x37,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x70,0x6f,0x73,0x65,0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x31,
    0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,0x5f,0x33,0x37,0x5b,0x30,0x5d,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x5f,0x33,0x37,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,
    0x33,0x37,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x4f,0x62,
    0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x4f,0x62,
    0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x4f,0x62,
    0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x4f,
    0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,
    0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x46,
    0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
];
/*
   #version 330
   
   uniform vec4 ObjFsParams[4];
   in vec3 Normal;
   in vec3 FragPos;
   layout(location = 0) out vec4 FragColor;
   
   void main()
   {
       vec3 _27 = normalize(Normal);
       vec3 _35 = normalize(ObjFsParams[0].xyz - FragPos);
       FragColor = vec4((((ObjFsParams[2].xyz * 0.100000001490116119384765625) + (ObjFsParams[2].xyz * max(dot(_27, _35), 0.0))) + (ObjFsParams[2].xyz * (0.5 * pow(max(dot(normalize(ObjFsParams[1].xyz - FragPos), reflect(-_35, _27)), 0.0), 32.0)))) * ObjFsParams[3].xyz, 1.0);
   }
   
*/
pub const FS_SOURCE_GLSL330: [u8; 500] = [
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x4f,0x62,0x6a,0x46,0x73,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x37,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x33,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x4f,
    0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x28,0x28,0x28,0x4f,0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x31,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x20,0x2b,0x20,0x28,0x4f,0x62,0x6a,
    0x46,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,0x37,0x2c,0x20,0x5f,
    0x33,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x29,0x20,0x2b,0x20,0x28,0x4f,
    0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x4f,0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,
    0x78,0x79,0x7a,0x20,0x2d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x2c,0x20,
    0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x33,0x35,0x2c,0x20,0x5f,0x32,
    0x37,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x33,0x32,0x2e,0x30,0x29,
    0x29,0x29,0x29,0x20,0x2a,0x20,0x4f,0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
];
/*
   cbuffer ObjVsParams : register(b0)
   {
       row_major float4x4 _14_model : packoffset(c0);
       row_major float4x4 _14_view : packoffset(c4);
       row_major float4x4 _14_projection : packoffset(c8);
   };
   
   
   static float4 gl_Position;
   static float3 FragPos;
   static float3 aPos;
   static float3 Normal;
   static float3 aNormal;
   
   struct SPIRV_Cross_Input
   {
       float3 aPos : TEXCOORD0;
       float3 aNormal : TEXCOORD1;
   };
   
   struct SPIRV_Cross_Output
   {
       float3 FragPos : TEXCOORD0;
       float3 Normal : TEXCOORD1;
       float4 gl_Position : SV_Position;
   };
   
   // Returns the determinant of a 2x2 matrix.
   float spvDet2x2(float a1, float a2, float b1, float b2)
   {
       return a1 * b2 - b1 * a2;
   }
   
   // Returns the determinant of a 3x3 matrix.
   float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3)
   {
       return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3);
   }
   
   // Returns the inverse of a matrix, by using the algorithm of calculating the classical
   // adjoint and dividing by the determinant. The contents of the matrix are changed.
   float4x4 spvInverse(float4x4 m)
   {
       float4x4 adj;	// The adjoint matrix (inverse after dividing by determinant)
   
       // Create the transpose of the cofactors, as the classical adjoint of the matrix.
       adj[0][0] =  spvDet3x3(m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
       adj[0][1] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
       adj[0][2] =  spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[3][1], m[3][2], m[3][3]);
       adj[0][3] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3]);
   
       adj[1][0] = -spvDet3x3(m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
       adj[1][1] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
       adj[1][2] = -spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[3][0], m[3][2], m[3][3]);
       adj[1][3] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3]);
   
       adj[2][0] =  spvDet3x3(m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
       adj[2][1] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
       adj[2][2] =  spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[3][0], m[3][1], m[3][3]);
       adj[2][3] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3]);
   
       adj[3][0] = -spvDet3x3(m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
       adj[3][1] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
       adj[3][2] = -spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[3][0], m[3][1], m[3][2]);
       adj[3][3] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2]);
   
       // Calculate the determinant as a combination of the cofactors of the first row.
       float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0]);
   
       // Divide the classical adjoint matrix by the determinant.
       // If determinant is zero, matrix is not invertable, so leave it unchanged.
       return (det != 0.0f) ? (adj * (1.0f / det)) : m;
   }
   
   void vert_main()
   {
       FragPos = float3(mul(float4(aPos, 1.0f), _14_model).xyz);
       float4x4 _37 = transpose(spvInverse(_14_model));
       Normal = mul(aNormal, float3x3(_37[0].xyz, _37[1].xyz, _37[2].xyz));
       gl_Position = mul(float4(FragPos, 1.0f), mul(_14_view, _14_projection));
   }
   
   SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
   {
       aPos = stage_input.aPos;
       aNormal = stage_input.aNormal;
       vert_main();
       SPIRV_Cross_Output stage_output;
       stage_output.gl_Position = gl_Position;
       stage_output.FragPos = FragPos;
       stage_output.Normal = Normal;
       return stage_output;
   }
*/
pub const VS_SOURCE_HLSL4: [u8; 4060] = [
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,
    0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,
    0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,
    0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x34,0x5f,
    0x6d,0x6f,0x64,0x65,0x6c,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,
    0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,
    0x31,0x34,0x5f,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,
    0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x5f,0x31,0x34,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,
    0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x61,0x50,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x46,0x72,
    0x61,0x67,0x50,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x2f,0x2f,0x20,0x52,
    0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,
    0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,0x61,0x20,0x32,0x78,0x32,0x20,
    0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,
    0x76,0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x31,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,
    0x2a,0x20,0x62,0x32,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x61,0x32,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,
    0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,
    0x20,0x61,0x20,0x33,0x78,0x33,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,
    0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x33,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x32,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x63,0x33,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,
    0x74,0x32,0x78,0x32,0x28,0x62,0x32,0x2c,0x20,0x62,0x33,0x2c,0x20,0x63,0x32,0x2c,
    0x20,0x63,0x33,0x29,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,
    0x65,0x74,0x32,0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x63,0x32,
    0x2c,0x20,0x63,0x33,0x29,0x20,0x2b,0x20,0x63,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x62,
    0x32,0x2c,0x20,0x62,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,
    0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,
    0x65,0x20,0x6f,0x66,0x20,0x61,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x62,
    0x79,0x20,0x75,0x73,0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x61,0x6c,0x67,0x6f,
    0x72,0x69,0x74,0x68,0x6d,0x20,0x6f,0x66,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,
    0x74,0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,
    0x61,0x6c,0x0a,0x2f,0x2f,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x61,0x6e,
    0x64,0x20,0x64,0x69,0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x74,0x68,
    0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x20,0x54,
    0x68,0x65,0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74,0x73,0x20,0x6f,0x66,0x20,0x74,
    0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x61,0x72,0x65,0x20,0x63,0x68,
    0x61,0x6e,0x67,0x65,0x64,0x2e,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x73,0x70,0x76,0x49,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x78,0x34,0x20,0x61,0x64,0x6a,0x3b,0x09,0x2f,0x2f,0x20,0x54,0x68,
    0x65,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,
    0x20,0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x20,0x61,0x66,0x74,0x65,0x72,0x20,
    0x64,0x69,0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x64,0x65,0x74,0x65,
    0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x29,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,
    0x20,0x43,0x72,0x65,0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x70,0x6f,0x73,0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,
    0x61,0x63,0x74,0x6f,0x72,0x73,0x2c,0x20,0x61,0x73,0x20,0x74,0x68,0x65,0x20,0x63,
    0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,
    0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,
    0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,
    0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,
    0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,
    0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,
    0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,
    0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,
    0x30,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,
    0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x20,
    0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,
    0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,
    0x6a,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,
    0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,
    0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,
    0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,
    0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x32,
    0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,
    0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x20,0x3d,
    0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,
    0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x2d,
    0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,
    0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x61,0x6c,0x63,0x75,
    0x6c,0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,
    0x6e,0x61,0x6e,0x74,0x20,0x61,0x73,0x20,0x61,0x20,0x63,0x6f,0x6d,0x62,0x69,0x6e,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,
    0x61,0x63,0x74,0x6f,0x72,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x66,0x69,
    0x72,0x73,0x74,0x20,0x72,0x6f,0x77,0x2e,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x64,0x65,0x74,0x20,0x3d,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x30,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,
    0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x2a,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,
    0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x20,0x2a,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x30,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,
    0x44,0x69,0x76,0x69,0x64,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,
    0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,
    0x72,0x69,0x78,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,
    0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x49,
    0x66,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x69,0x73,
    0x20,0x7a,0x65,0x72,0x6f,0x2c,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x69,0x73,
    0x20,0x6e,0x6f,0x74,0x20,0x69,0x6e,0x76,0x65,0x72,0x74,0x61,0x62,0x6c,0x65,0x2c,
    0x20,0x73,0x6f,0x20,0x6c,0x65,0x61,0x76,0x65,0x20,0x69,0x74,0x20,0x75,0x6e,0x63,
    0x68,0x61,0x6e,0x67,0x65,0x64,0x2e,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x28,0x64,0x65,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x66,0x29,
    0x20,0x3f,0x20,0x28,0x61,0x64,0x6a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,
    0x2f,0x20,0x64,0x65,0x74,0x29,0x29,0x20,0x3a,0x20,0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,
    0x5f,0x31,0x34,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x33,
    0x37,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x73,0x70,
    0x76,0x49,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x31,0x34,0x5f,0x6d,0x6f,0x64,
    0x65,0x6c,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x5f,0x33,0x37,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x37,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x5f,0x33,0x37,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x46,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x6d,0x75,0x6c,0x28,
    0x5f,0x31,0x34,0x5f,0x76,0x69,0x65,0x77,0x2c,0x20,0x5f,0x31,0x34,0x5f,0x70,0x72,
    0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x61,0x50,0x6f,0x73,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,
    0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,
    0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x50,
    0x6f,0x73,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
];
/*
   cbuffer ObjFsParams : register(b0)
   {
       float3 _16_lightPos : packoffset(c0);
       float3 _16_viewPos : packoffset(c1);
       float3 _16_lightColor : packoffset(c2);
       float3 _16_objectColor : packoffset(c3);
   };
   
   
   static float3 Normal;
   static float3 FragPos;
   static float4 FragColor;
   
   struct SPIRV_Cross_Input
   {
       float3 FragPos : TEXCOORD0;
       float3 Normal : TEXCOORD1;
   };
   
   struct SPIRV_Cross_Output
   {
       float4 FragColor : SV_Target0;
   };
   
   void frag_main()
   {
       float3 _27 = normalize(Normal);
       float3 _35 = normalize(_16_lightPos - FragPos);
       FragColor = float4((((_16_lightColor * 0.100000001490116119384765625f) + (_16_lightColor * max(dot(_27, _35), 0.0f))) + (_16_lightColor * (0.5f * pow(max(dot(normalize(_16_viewPos - FragPos), reflect(-_35, _27)), 0.0f), 32.0f)))) * _16_objectColor, 1.0f);
   }
   
   SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
   {
       Normal = stage_input.Normal;
       FragPos = stage_input.FragPos;
       frag_main();
       SPIRV_Cross_Output stage_output;
       stage_output.FragColor = FragColor;
       return stage_output;
   }
*/
pub const FS_SOURCE_HLSL4: [u8; 1063] = [
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x4f,0x62,0x6a,0x46,0x73,0x50,0x61,0x72,
    0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,
    0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x5f,0x76,0x69,
    0x65,0x77,0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x31,0x36,0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x33,0x29,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,
    0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,
    0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x37,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x5f,0x33,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x20,0x2d,0x20,0x46,
    0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x28,0x28,0x28,0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x2a,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,
    0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,
    0x35,0x66,0x29,0x20,0x2b,0x20,0x28,0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x43,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x37,0x2c,0x20,0x5f,0x33,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x31,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x43,
    0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x66,0x20,0x2a,0x20,0x70,
    0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x5f,0x31,0x36,0x5f,0x76,0x69,0x65,0x77,0x50,0x6f,0x73,
    0x20,0x2d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x2c,0x20,0x72,0x65,0x66,
    0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x33,0x35,0x2c,0x20,0x5f,0x32,0x37,0x29,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x33,0x32,0x2e,0x30,0x66,0x29,0x29,
    0x29,0x29,0x20,0x2a,0x20,0x5f,0x31,0x36,0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x43,
    0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,
    0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
];
/*
   #pragma clang diagnostic ignored "-Wmissing-prototypes"
   
   #include <metal_stdlib>
   #include <simd/simd.h>
   
   using namespace metal;
   
   // Returns the determinant of a 2x2 matrix.
   static inline __attribute__((always_inline))
   float spvDet2x2(float a1, float a2, float b1, float b2)
   {
       return a1 * b2 - b1 * a2;
   }
   
   // Returns the determinant of a 3x3 matrix.
   static inline __attribute__((always_inline))
   float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3)
   {
       return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3);
   }
   
   // Returns the inverse of a matrix, by using the algorithm of calculating the classical
   // adjoint and dividing by the determinant. The contents of the matrix are changed.
   static inline __attribute__((always_inline))
   float4x4 spvInverse4x4(float4x4 m)
   {
       float4x4 adj;	// The adjoint matrix (inverse after dividing by determinant)
   
       // Create the transpose of the cofactors, as the classical adjoint of the matrix.
       adj[0][0] =  spvDet3x3(m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
       adj[0][1] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
       adj[0][2] =  spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[3][1], m[3][2], m[3][3]);
       adj[0][3] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3]);
   
       adj[1][0] = -spvDet3x3(m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
       adj[1][1] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
       adj[1][2] = -spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[3][0], m[3][2], m[3][3]);
       adj[1][3] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3]);
   
       adj[2][0] =  spvDet3x3(m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
       adj[2][1] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
       adj[2][2] =  spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[3][0], m[3][1], m[3][3]);
       adj[2][3] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3]);
   
       adj[3][0] = -spvDet3x3(m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
       adj[3][1] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
       adj[3][2] = -spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[3][0], m[3][1], m[3][2]);
       adj[3][3] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2]);
   
       // Calculate the determinant as a combination of the cofactors of the first row.
       float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0]);
   
       // Divide the classical adjoint matrix by the determinant.
       // If determinant is zero, matrix is not invertable, so leave it unchanged.
       return (det != 0.0f) ? (adj * (1.0f / det)) : m;
   }
   
   struct ObjVsParams
   {
       float4x4 model;
       float4x4 view;
       float4x4 projection;
   };
   
   struct main0_out
   {
       float3 FragPos [[user(locn0)]];
       float3 Normal [[user(locn1)]];
       float4 gl_Position [[position]];
   };
   
   struct main0_in
   {
       float3 aPos [[attribute(0)]];
       float3 aNormal [[attribute(1)]];
   };
   
   vertex main0_out main0(main0_in in [[stage_in]], constant ObjVsParams& _14 [[buffer(0)]])
   {
       main0_out out = {};
       out.FragPos = float3((_14.model * float4(in.aPos, 1.0)).xyz);
       float4x4 _37 = transpose(spvInverse4x4(_14.model));
       out.Normal = float3x3(_37[0].xyz, _37[1].xyz, _37[2].xyz) * in.aNormal;
       out.gl_Position = (_14.projection * _14.view) * float4(out.FragPos, 1.0);
       return out;
   }
   
*/
pub const VS_SOURCE_METAL_MACOS: [u8; 3908] = [
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,
    0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,0x61,
    0x20,0x32,0x78,0x32,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,
    0x31,0x20,0x2a,0x20,0x62,0x32,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x61,0x32,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,
    0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,
    0x6f,0x66,0x20,0x61,0x20,0x33,0x78,0x33,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,
    0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,
    0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x63,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x32,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x33,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,
    0x32,0x78,0x32,0x28,0x62,0x32,0x2c,0x20,0x62,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,
    0x63,0x33,0x29,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,
    0x74,0x32,0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x63,0x32,0x2c,
    0x20,0x63,0x33,0x29,0x20,0x2b,0x20,0x63,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,
    0x65,0x74,0x32,0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x62,0x32,
    0x2c,0x20,0x62,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,
    0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,
    0x20,0x6f,0x66,0x20,0x61,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x62,0x79,
    0x20,0x75,0x73,0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x61,0x6c,0x67,0x6f,0x72,
    0x69,0x74,0x68,0x6d,0x20,0x6f,0x66,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,
    0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,
    0x6c,0x0a,0x2f,0x2f,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x61,0x6e,0x64,
    0x20,0x64,0x69,0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x74,0x68,0x65,
    0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x20,0x54,0x68,
    0x65,0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,
    0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x61,0x72,0x65,0x20,0x63,0x68,0x61,
    0x6e,0x67,0x65,0x64,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,
    0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,
    0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x73,0x70,0x76,0x49,
    0x6e,0x76,0x65,0x72,0x73,0x65,0x34,0x78,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x61,0x64,0x6a,0x3b,0x09,0x2f,0x2f,0x20,0x54,0x68,0x65,
    0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x20,0x61,0x66,0x74,0x65,0x72,0x20,0x64,
    0x69,0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x64,0x65,0x74,0x65,0x72,
    0x6d,0x69,0x6e,0x61,0x6e,0x74,0x29,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,
    0x43,0x72,0x65,0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x72,0x61,0x6e,0x73,
    0x70,0x6f,0x73,0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,
    0x63,0x74,0x6f,0x72,0x73,0x2c,0x20,0x61,0x73,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,
    0x61,0x73,0x73,0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,
    0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x20,
    0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,
    0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x33,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,
    0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x20,0x3d,
    0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,
    0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,
    0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x32,0x5d,
    0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,
    0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x2d,0x73,
    0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,
    0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,
    0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x29,
    0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,
    0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,
    0x61,0x6e,0x74,0x20,0x61,0x73,0x20,0x61,0x20,0x63,0x6f,0x6d,0x62,0x69,0x6e,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,
    0x63,0x74,0x6f,0x72,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x66,0x69,0x72,
    0x73,0x74,0x20,0x72,0x6f,0x77,0x2e,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x64,0x65,0x74,0x20,0x3d,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,
    0x30,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,
    0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,
    0x32,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,
    0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x30,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x44,
    0x69,0x76,0x69,0x64,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,
    0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,
    0x69,0x78,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,
    0x69,0x6e,0x61,0x6e,0x74,0x2e,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x49,0x66,
    0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x69,0x73,0x20,
    0x7a,0x65,0x72,0x6f,0x2c,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x69,0x73,0x20,
    0x6e,0x6f,0x74,0x20,0x69,0x6e,0x76,0x65,0x72,0x74,0x61,0x62,0x6c,0x65,0x2c,0x20,
    0x73,0x6f,0x20,0x6c,0x65,0x61,0x76,0x65,0x20,0x69,0x74,0x20,0x75,0x6e,0x63,0x68,
    0x61,0x6e,0x67,0x65,0x64,0x2e,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x28,0x64,0x65,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x66,0x29,0x20,
    0x3f,0x20,0x28,0x61,0x64,0x6a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2f,
    0x20,0x64,0x65,0x74,0x29,0x29,0x20,0x3a,0x20,0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x6d,0x6f,0x64,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x76,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x50,0x6f,0x73,0x20,0x5b,0x5b,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x4f,0x62,0x6a,0x56,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x31,0x34,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x50,0x6f,0x73,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x33,0x37,0x20,0x3d,
    0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x73,0x70,0x76,0x49,0x6e,
    0x76,0x65,0x72,0x73,0x65,0x34,0x78,0x34,0x28,0x5f,0x31,0x34,0x2e,0x6d,0x6f,0x64,
    0x65,0x6c,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,
    0x5f,0x33,0x37,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x37,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x37,0x5b,0x32,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x34,0x2e,0x70,0x72,0x6f,
    0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x2a,0x20,0x5f,0x31,0x34,0x2e,0x76,0x69,
    0x65,0x77,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6f,0x75,0x74,
    0x2e,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
];
/*
   #include <metal_stdlib>
   #include <simd/simd.h>
   
   using namespace metal;
   
   struct ObjFsParams
   {
       float3 lightPos;
       float3 viewPos;
       float3 lightColor;
       float3 objectColor;
   };
   
   struct main0_out
   {
       float4 FragColor [[color(0)]];
   };
   
   struct main0_in
   {
       float3 FragPos [[user(locn0)]];
       float3 Normal [[user(locn1)]];
   };
   
   fragment main0_out main0(main0_in in [[stage_in]], constant ObjFsParams& _16 [[buffer(0)]])
   {
       main0_out out = {};
       float3 _27 = fast::normalize(in.Normal);
       float3 _35 = fast::normalize(_16.lightPos - in.FragPos);
       out.FragColor = float4((((_16.lightColor * 0.100000001490116119384765625) + (_16.lightColor * fast::max(dot(_27, _35), 0.0))) + (_16.lightColor * (0.5 * pow(fast::max(dot(fast::normalize(_16.viewPos - in.FragPos), reflect(-_35, _27)), 0.0), 32.0)))) * _16.objectColor, 1.0);
       return out;
   }
   
*/
pub const FS_SOURCE_METAL_MACOS: [u8; 859] = [
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x4f,
    0x62,0x6a,0x46,0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x69,0x65,
    0x77,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x62,0x6a,0x65,0x63,0x74,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,
    0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,
    0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x4f,0x62,0x6a,0x46,
    0x73,0x50,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x36,0x20,0x5b,0x5b,0x62,
    0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x32,0x37,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,
    0x35,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x5f,0x31,0x36,0x2e,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,
    0x20,0x2d,0x20,0x69,0x6e,0x2e,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x28,0x28,0x5f,0x31,
    0x36,0x2e,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x30,
    0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,
    0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x20,0x2b,0x20,
    0x28,0x5f,0x31,0x36,0x2e,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,
    0x2a,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x37,0x2c,0x20,0x5f,0x33,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x5f,0x31,0x36,0x2e,0x6c,0x69,0x67,0x68,0x74,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x70,0x6f,0x77,
    0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,
    0x31,0x36,0x2e,0x76,0x69,0x65,0x77,0x50,0x6f,0x73,0x20,0x2d,0x20,0x69,0x6e,0x2e,
    0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x2c,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,
    0x74,0x28,0x2d,0x5f,0x33,0x35,0x2c,0x20,0x5f,0x32,0x37,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x33,0x32,0x2e,0x30,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,
    0x5f,0x31,0x36,0x2e,0x6f,0x62,0x6a,0x65,0x63,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
];

pub fn obj_shader_desc(backend: sg::Backend) -> sg::ShaderDesc {
    let mut desc = sg::ShaderDesc::new();
    match backend {
        sg::Backend::Glcore33 => {
            desc.attrs[0].name = b"aPos\0".as_ptr() as *const _;
            desc.attrs[1].name = b"aNormal\0".as_ptr() as *const _;
            desc.vs.source = &VS_SOURCE_GLSL330 as *const _ as *const _;
            desc.vs.entry = b"main\0".as_ptr() as *const _;
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.vs.uniform_blocks[0].uniforms[0].name = b"ObjVsParams\0".as_ptr() as *const _;
            desc.vs.uniform_blocks[0].uniforms[0]._type = sg::UniformType::Float4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
            desc.fs.source = &FS_SOURCE_GLSL330 as *const _ as *const _;
            desc.fs.entry = b"main\0".as_ptr() as *const _;
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.fs.uniform_blocks[0].uniforms[0].name = b"ObjFsParams\0".as_ptr() as *const _;
            desc.fs.uniform_blocks[0].uniforms[0]._type = sg::UniformType::Float4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 4;
            desc.label = b"obj_shader\0".as_ptr() as *const _;
        },
        sg::Backend::D3d11 => {
            desc.attrs[0].sem_name = b"TEXCOORD\0".as_ptr() as *const _;
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = b"TEXCOORD\0".as_ptr() as *const _;
            desc.attrs[1].sem_index = 1;
            desc.vs.source = &VS_SOURCE_HLSL4 as *const _ as *const _;
            desc.vs.d3d11_target = b"vs_4_0\0".as_ptr() as *const _;
            desc.vs.entry = b"main\0".as_ptr() as *const _;
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.fs.source = &FS_SOURCE_HLSL4 as *const _ as *const _;
            desc.fs.d3d11_target = b"ps_4_0\0".as_ptr() as *const _;
            desc.fs.entry = b"main\0".as_ptr() as *const _;
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.label = b"obj_shader\0".as_ptr() as *const _;
        },
        sg::Backend::MetalMacos => {
            desc.vs.source = &VS_SOURCE_METAL_MACOS as *const _ as *const _;
            desc.vs.entry = b"main0\0".as_ptr() as *const _;
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.fs.source = &FS_SOURCE_METAL_MACOS as *const _ as *const _;
            desc.fs.entry = b"main0\0".as_ptr() as *const _;
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = sg::UniformLayout::Std140;
            desc.label = b"obj_shader\0".as_ptr() as *const _;
        },
        _ => {},
    }
    desc
}
